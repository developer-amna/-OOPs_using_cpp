\\ Program # 1

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
	class num
	{
		private :     // access specifier
			
			int variable;
		
		public:	      // access specifier
			
			void input()      // function to take input from user
			{
			cout <<	"Enter value in integer type variable :";
				cin>>variable;
			}
			
			void output()        // function to display output
			
			{
			    cout<<"The value stored in variable is :"<< variable;
			}
			
	};
int main ()               // main function from where execution starts

{
	num display;
	
	display.input();      // call input function to take input from user
	display.output();      // call output function to display output

   return 0; //return 0 to operating system
}

\\ Program # 2

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace

      class marks      // class definition
      {
      	     private:       // access specifier
      	     	
      	     	int sub1;
      	     	int sub2;
      	     	int sub3;
      	     	
      	     public:     // access specifier
      	     	
      	     	void input()         // function to take input from user
	  	     	{
	  	     		cout<<"Enter marks of three subjects : ";
	  	     		cin>>sub1>>sub2>>sub3;
	  	     	}
      	     	
				   
				 int sum( )     // function to calculate sum of three subjects
				 {
				 	return sub1+sub2+sub3;
				   }
				   
				   float avg( )     // function to calculate average of three subjects
				   {
		            return (sub1+sub2+sub3)/3.0;

					 }  
	  };
int main ()               // main function from where execution starts
{
	marks m;            // create an object of class marks
	 m.input();
	 cout<<"The sum of these numbers is : "<<m.sum( )<<endl;
	 cout<<"The average is : "<<m.avg( )<<endl;
	 
	
   return 0; //return 0 to operating system
}




\\ Program # 3

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace

      class circle        // class definition
      {
      	     private:       // access specifier
      	     	
      	     	float radius;
      	     	
      	     public:         // access specifier
      	     	 
      	     	void input(float r)
      	     	{
      	     		radius=r;
				   }
				   
				void area ()     // function to calculate area of circle
				 {
				 	cout<<"The area of circle is :"<<3.14*radius*radius<<endl;
				   }
				   
				void circum( )     // function to calculate circumference of circle
				   {
		             cout<<"The circumferrence of circle is :"<<2*3.14*radius;

					 }  
	  };
int main ()               // main function from where execution starts
{
     circle  c;
     int r;
     
     cout<<"Enter radius :";      // prompt user to enter radius
     cin>>r;
	 c.input(r);
	 
	c. area ();
	c. circum( );
	 
	 
   return 0; //return 0 to operating system
}

\\ Program # 4

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace

class book         // class declaration
{
	  private:    //access specifier
	  	j
	  	int book_id;
	  	int pages;
	  	float book_price;
	  	
	  public:   //  access specifier
	  	
	  	void get()
	  	{
	  		cout<<"Enter book id :";
	  		cin>>book_id;
	  		cout<<"Enter book pages :";
	  		cin>>pages;
	  		cout<<"Enter book price :";
	  		cin>>book_price;
		  }
		  
		  
		 void show()
		 {
		 	cout<<" book id is:"<<book_id<<endl;
		 	cout<<" book pages are:"<<pages<<endl;
		 	cout<<" book price is:"<<book_price<<endl;

         }
         
        void set(int id,int pg,float pr)
		{
			book_id=id;
			pages=pg;
			book_price=pr;
		 } 
		 
		 
		 float get_price()
		 {
		 	return  book_price;
		 }
         
};
int main ()               // main function from where execution starts
{
	book b1,b2;
	b1.get();
	b2.set(2,320,120.45);
	cout<<"\n The most expensive book is:";
	if(b1.get_price()>b2.get_price())
	  b1.show();
	  
	 else
	  b2.show(); 
	
   return 0; //return 0 to operating system
}

\\ Program # 5

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
class student 
{
	private:    // access specifier
	    int rollno;
	  	char  grade;
	  	string name;
	  	
	  	
	public:         // access specifier
	  // use setters
	      void setrollno(int n)
	      {
	      	rollno=n;
		  }
		  
		  void setgrade( char c)
		  {
		  	grade=c;
		  }
		  
	      void setname(string a) 
		  {
		  	
		  	name=a;
		  }	
			
			
			void display() // function to display student details
			{
				cout<<"Roll no is :"<<rollno<<endl;
				cout<<"Grade is :"<<grade<<endl;
				cout<<"Name is :"<<name<<endl;
					  }	  	
};
int main ()               // main function from where execution starts
{
	student s;
   s.setname("Amna");
   s.setrollno(01);
   s.setgrade('A');
   s.display();
	
   return 0; //return 0 to operating system
}

\\ Program # 6

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
class hello 
{
	private:
		int n;
		
	public:
		hello()        // constructor
		{
			cout<<"object created......"<<endl;
			}
			
	void setn(int n)
		{
		this ->	n=n;    // this pointer is the address of current object
		}
		int getn()
		{
			return n;
		}
				
};

int main ()               // main function from where execution starts
{
	hello x,y,z;
	x.setn(100);
	cout<<"The value of n is :"<<x.getn();
	
	
	
	
   return 0; //return 0 to operating system
}

\\ Program # 7

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
class num 
{
	private:
		int n1;
		int n2;
		
	public:
		num()
		{
		n1=n2=10;
			}
			
	void display()
	
		{
			cout<<"The value of n1 is :"<<n1;
			cout<<"\nThe value of n2 is :"<<n2;
			cout<<"\nAverage is :"<<(n1+n2)/2;
		}
				
};

int main ()               // main function from where execution starts
{
	 num n;
	 n.display();	
   return 0; //return 0 to operating system
}

\\ Program # 8

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
	class book 
	{
	
		int pages ;
		int price ;
		string title;
		
	public:
	  
	   void get()
	   {
	   	cout<<"Enter pages :";
	   	cin>>pages;
	   	cout<<"Enter price :";
	   	cin>>price;
	   	cout<<"Enter title :";
	   	cin>>title;
		   }
		   
		   
		   void show()
		   {
		   	cout<<"Pages are :"<<pages<<endl;;
		   	cout<<"Price is :"<<price<<endl;
		   	cout<<"Title is :"<<title<<endl;
			   }
		};
		
		
		
int main ()               // main function from where execution starts
{
	book b1;
	b1.get();
	book b2=b1;
	book b3=b1;
	 
	 cout<<"\nThe detail of book 1 is :"<<endl;
	 b1.show();
	  cout<<"\nThe detail of book 2 is :"<<endl;
	  b2.show();
	   cout<<"\nThe detail of book 3 is :"<<endl;
	b3.show();
   return 0; //return 0 to operating system
}

\\ Program # 9

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
	class student 
	{
	
		int marks;
		char grade;
		
	public:
		
		student (int m, char g)
		{
			marks = m;
			grade = g;
		}
	  
	   void show()
	   {
	   	cout<<"Marks :"<<marks<<endl;
	   	
	   	cout<<"Grade is  :"<<grade<<endl;
	   	
		   }
		   

		};
		
		
		
int main ()               // main function from where execution starts
{
	student s1(23,'A'),s2(25,'A');
	 
	 cout<<"\nThe detail of student is :"<<endl;
	 s1.show();
	  cout<<"\nThe detail of student 2 is :"<<endl;
	  s2.show();
	
   return 0; //return 0 to operating system
}

\\ Program # 10

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
class Person
{
	string name;
	int age;
	
public:
	void setValues(string n, int a)
	{
		name=n;
		age=a;
	}
	
	void copied(const Person &p)
	{
		name=p.name;
		age=p.age;
	}
	
    void display()
	{
		cout<<"\nName is :"<<name;
		cout<<"\nAge is :"<<age;
		}
			
};
int main ()               // main function from where execution starts
{
	Person p1,p2;
	p1.setValues("ali",23);
	
	cout<<"Before passing object:";
	p1.display();
	p2.display();
	
	p2.copied(p1);
	
	cout<<"After passing object :";
	  p1.display();
	  p2.display();
	
	
	
	
	
   return 0; //return 0 to operating system
}

\\ Program # 11

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;     // use the stanadard namespace
class Person
{
	private:
		int age;
		string name;
	
	public:
		 Person()
		{
			age=20;
			name="Amna";
		}
		
		 Person(int a, string n)
		{
			age=a;
			name=n;
		}
		
		
	void display()
	{
		cout<<"\n The age is :"<<age;
		cout<<"\n The name is :"<<name;
		}	
};
int main ()               // main function from where execution starts
{
	Person p1;
 Person	p2(24,"ali");
	p1.display();
	p2.display();
   return 0; //return 0 to operating system
}

\\Program # 12

#include<iostream>    // include the iostream library (a preprocessor directive)
using namespace std;   // use the stanadard namespace
class student
{
	public:
		string name;
		int age;
		void display (){
			cout<<"name="<<name<<endl;
			cout<<"age="<<age<<endl;
		}
};
int main(){         // main function from where execution starts
	student s;
	s.name="Amna";
	s.age=21;
	s.display();
	return 0;          \\ return 0 to operating system
}

\\ Program # 13

#include<iostream>     // include the iostream library (a preprocessor directive)
using namespace std;       // use the stanadard namespace
class student
{
	private:
		int age;
	public:
	    void setAge(int a){
	    	age=a;
		}	
		int getAge(){
			return age;
		}
};
int main(){          // main function from where execution starts
	student s;
	s.setAge(21);
	cout<<s.getAge();
	return 0;           // return 0 to operating system
}


\\ Program # 14

#include<iostream>           // include the iostream library (a preprocessor directive)
using namespace std;        // use the stanadard namespace
class student
{
	private:
		int rollno;
		string name;
		char grade;
		float CGPA;
	public:
	    void setrollno(int r){        \\ function to set roll number
	    	rollno=r;
		}	
		int getrollno(){              \\ function to get roll number
			return rollno;
		}
		void setname(string n){
			name=n;
		}
		string getname(){
			return name;
		}
		void setgrade(char g){
			grade=g;
		}
		char getgrade(){
			return grade;
		}
		void setCGPA(float f){
			CGPA=f;
		}
		float getCGPA(){
			return CGPA;
		}
};
int main(){                // main function from where execution starts
      student s;
      s.setrollno(2);
      cout<<"Roll No="<<s.getrollno()<<endl;
      s.setname("Amna");
      cout<<"Name="<<s.getname()<<endl;
      s.setgrade('A');
      cout<<"Grade="<<s.getgrade()<<endl;
      s.setCGPA(3.75);
      cout<<"CGPA="<<s.getCGPA()<<endl;
      return 0;                          // return 0 to operating system
  }


\\ Program # 15

#include<iostream>          // include the iostream library (a preprocessor directive)
using namespace std;          // use the stanadard namespace

class student{
	public:
		student(){             // default constructor
			cout<<"Welcome default Constructor called."<< endl;
		}
};

int main(){            // main function from where execution starts
	student s1;
	return 0;            // return 0 to operating system
}


\\ Program # 16

#include<iostream>          // include the iostream library (a preprocessor directive)
using namespace std;           // use the stanadard namespace

class student{
	private:
		string name;
		int rollNo;
	public:
		student (string n,int r) {           // parameterized constructor
			name = n;
			rollNo = r;
		}
		
		void show() {
			cout<<"Name:"<<name<<endl<<"Roll No:"<<rollNo<<endl;
		}
};

int main(){                    // main function from where execution starts
    student s1("Amna",101);
    s1.show();             // display student details
    return 0;              // return 0 to operating system
}

\\ Program # 17

#include<iostream>            // include the iostream library (a preprocessor directive)
using namespace std;           // use the stanadard namespace

class student {
	private:
		string name;
		int rollNo;
	public:
		student(string n, int r) {            // parameterized constructor
			name = n;
			rollNo = r;
		}
		student(const student &s) {               // copy constructor
			name = s.name;
			rollNo = s.rollNo;
		}
		void show() {
		   cout<<"Name:"<<name<<endl<<"Roll No:"<<rollNo<<endl;
	}
};

int main()                // main function from where execution starts
      {
      	student s1("Amna", 101);
      	s1.show();
		        	student s2=s1;           // using copy constructor
      	s2.show();
		  return 0;
		  	  }

\\ Program # 18

#include<iostream>          // include the iostream library (a preprocessor directive)
using namespace std;          // use the stanadard namespace
class student{
	private:
		int rollno;
		string name;
	public:
		student(){            // default constructor
			rollno=0;
			name="unknown";
			cout<<"default constructor called"<<endl;
		}
		student (int r, string n){             // parameterized constructor
		   rollno=r;
		   name=n;
		   cout<<"Parametrized constructor called"<<endl;
	}
	student (const student &s){                   // copy constructor
	    // copy values from s to this object
	    rollno=s.rollno;
	    name=s.name;
	    cout<<"copy constructor called"<<endl;
	}
	void show(){
	cout<<"Roll No:"<<rollno<<endl<<"Name:"<<name<<endl;
	}
};
int main()
{
	cout<<"\n---default constructor Example"<<endl;
	student s1;
	s1.show();
	cout<<"\n---parametrized constructor Example"<<endl;
	student s2(101,"Amna");
	s2.show();
	cout<<"\n---copy constructor Example"<<endl;
	student s3=s2;
	s3.show();
	return 0;	
}

\\ Program # 19

#include<iostream>                 // include the iostream library (a preprocessor directive)
using namespace std;                   // use the stanadard namespace
class student {
	private:
		int rollNo;
		string name;
		float marks;
	public:
		student(){               // default constructor
			rollNo=0;
			name="unknown";
			marks=0.0;
			cout<<"Default Constructor called"<<endl;
		}
		student (int r,string n,float m){           // parameterized constructor
			rollNo=r;
			name=n;
			marks=m;
			cout<<"Parameterized Constructor called"<<endl;
		}
		student (const student &s){              // copy constructor
		     rollNo=s.rollNo;
			 name=s.name;
			 marks=s.marks;
			 cout<<"Copy constructor called"<<endl;	
		}
		void setRollNo(int r){              // function to set roll number
			rollNo=r;
		}
		void setName(string n){
			name=n;
		}
		void setMarks(float m){
			marks=m;
		}
		int getRollNo(){                  // function to get roll number
			return rollNo;
		}
		string getName(){
			return name;
		}
		float getMarks(){
			return marks;
		}
		void show(){
			cout<<"Roll No:"<<rollNo<<endl<<"Name:"<<name<<endl<<"Marks:"<<marks<<endl;
		}
};
int main() {                  // main function from where execution starts
        cout<<"\n---Default Constructor---"<<endl;
        student s1;
        s1.setRollNo(11);
        s1.setName("Amna");
        s1.setMarks(89.5);
        s1.show();                  
        cout<<"\n---Parameterized Constructor---"<<endl;
        student s2(22,"Usman",95.0);
        s2.show();
        cout<<"\n---copy constructor---"<<endl;
        student s3=s2;
        s3.show();
        cout<<"\n---Getter Example---"<<endl;        
        cout<<"Roll No:"<<s1.getRollNo()<<endl;              
        cout<<"Name:"<<s1.getName()<<endl;
        cout<<"Marks:"<<s1.getMarks()<<endl;
        return 0;               \\ return 0 to operating system
    }






